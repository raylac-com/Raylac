import { getPublicClient } from '@raylac/shared';
import { Hex } from 'viem';
import { privateKeyToAccount } from 'viem/accounts';
import { base } from 'viem/chains';

const estimateGas = async () => {
  const publicClient = getPublicClient({ chainId: base.id });

  const account = privateKeyToAccount(
    process.env.TEST_RELAY_PRIVATE_KEY as Hex
  );

  const gas = await publicClient.estimateGas({
    account,
    to: '0x77a917df7a084b7b3e43517ae28373c2a5492625',
    value: 0n,
    data: '0x5caab55a00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000420000000000000000000000000f70da97812cb96acdf810712aa562db8dfa3dbef00000000000000000000000000000000000000000000000000000000000000010000000000000000000000004ed4e862860bed51a9570b96d89af5e1b0efefed00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000008ac7230489e8000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000004ed4e862860bed51a9570b96d89af5e1b0efefed000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c550000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c550000000000000000000000000000000000000000000000008ac7230489e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001642646478b0000000000000000000000004ed4e862860bed51a9570b96d89af5e1b0efefed0000000000000000000000000000000000000000000000008ac7230489e80000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000002424a680b71d000000000000000000000000a1bea5fe917450041748dbbbe7e9ac57a4bbebab00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000073024ed4e862860bed51a9570b96d89af5e1b0efefed01ffff00152375ed731bd67717fe3a12f62a9a2a27f4640000f2614a233c7c3e7f08b1f887ba133a13f1eb2c550009c401420000000000000000000000000000000000000601ffff0200a1bea5fe917450041748dbbbe7e9ac57a4bbebab000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000067a9079c8a395216931a00112de8338ae6c4e56b479ae0cdfac8cf2369bcd175',
    maxFeePerGas: 11881542n,
    maxPriorityFeePerGas: 1361057n,
  });

  console.log(gas);
};

estimateGas();
