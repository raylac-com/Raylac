// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Swap {
  id String @id @default(cuid())

  address         String
  tokenAddressIn  String
  tokenAddressOut String

  transactions Transaction[]

  amountIn  String
  amountOut String

  usdAmountIn  String
  usdAmountOut String

  relayerServiceFeeAmount       String
  relayerServiceFeeUsd          String
  relayerServiceFeeTokenAddress String
  relayerServiceFeeChainId      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Send {
  id String @id @default(cuid())

  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Receive {
  id String @id @default(cuid())

  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  hash String @id

  from String
  to   String

  chainId Int

  userOps UserOperation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Swap   Swap?   @relation(fields: [swapId], references: [id])
  swapId String?

  Send   Send?   @relation(fields: [sendId], references: [id])
  sendId String?

  Receive   Receive? @relation(fields: [receiveId], references: [id])
  receiveId String?
}

model UserOperation {
  hash String @id

  sender        String
  paymaster     String
  nonce         Int
  success       Boolean
  actualGasCost BigInt
  actualGasUsed BigInt
  chainId       Int

  Transaction     Transaction? @relation(fields: [transactionHash], references: [hash])
  transactionHash String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
