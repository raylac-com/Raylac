name: preview
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - packages/shared/src/**
      - packages/sync/src/**
      - packages/api/src/**
      - packages/app/src/**
      - .github/workflows/preview.yaml
  workflow_dispatch:

permissions:
  contents: read

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  setup-preview:
    name: Setup EAS preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with: 
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          cache: pnpm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: pnpm i --ignore-scripts

      - name: Build
        run: pnpm build

      - name: Create new preview channel
        run: eas channel:create ${{ github.event.pull_request.head.ref }}
        working-directory: packages/app
        continue-on-error: true

      - name: Link branch to channel
        run: eas channel:edit ${{ github.event.pull_request.head.ref }} --branch ${{ github.event.pull_request.head.ref }}
        working-directory: packages/app

      - name: Create a .env file
        run: printf "EXPO_PUBLIC_RPC_URL=https://raylac-api-pr-${{ github.event.pull_request.number }}.onrender.com\nEXPO_PUBLIC_ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}\n" > .env
        working-directory: packages/app

      - name: Run eas update for the preview branch
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --auto --channel ${{ github.event.pull_request.head.ref }}
          working-directory: packages/app


  setup-test-env:
    name: Setup test environment
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with: 
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          cache: pnpm

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm build

      - name: Setup test environment
        run: pnpm -F ci run setup
        env:
          RPC_URL: https://raylac-api-pr-${{ github.event.pull_request.number }}.onrender.com
          TEST_ACCOUNT_MNEMONIC: ${{ secrets.TEST_ACCOUNT_MNEMONIC }}

  integration-test:
    name: Run integration tests
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    needs: [setup-test-env]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with: 
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          cache: pnpm

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm build

      - name: Get the PR Postgres connection string
        run: |
          PR_DB_CONNECTION_STRING=$(pnpm -F ci run print-pr-postgres-connection-string) && \
          echo "DATABASE_URL=$PR_DB_CONNECTION_STRING" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

      - name: Run integration tests
        run: pnpm -F tests test syncNativeTransfers.test.ts syncAnnouncements.test.ts
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          ANVIL_RPC_URL: https://anvil-pr-${{ github.event.pull_request.number }}.onrender.com
